/**
 * Generated by @openapi-codegen
 *
 * @version 3.0.1
 */
/**
 * Provides program specific metadata from VTN to VEN.
 */
export type Program = {
  id?: ObjectID;
  createdDateTime?: DateTime;
  modificationDateTime?: DateTime;
  /**
   * Used as discriminator
   */
  objectType?: "PROGRAM";
  /**
   * Short name to uniquely identify program.
   *
   * @minLength 1
   * @maxLength 128
   * @example ResTOU
   */
  programName: string;
  /**
   * Long name of program for human readability.
   *
   * @example Residential Time of Use-A
   * @default null
   */
  programLongName?: string | null;
  /**
   * Short name of energy retailer providing the program.
   *
   * @example ACME
   * @default null
   */
  retailerName?: string | null;
  /**
   * Long name of energy retailer for human readability.
   *
   * @example ACME Electric Inc.
   * @default null
   */
  retailerLongName?: string | null;
  /**
   * A program defined categorization.
   *
   * @example PRICING_TARIFF
   * @default null
   */
  programType?: string | null;
  /**
   * Alpha-2 code per ISO 3166-1.
   *
   * @example US
   * @default null
   */
  country?: string | null;
  /**
   * Coding per ISO 3166-2. E.g. state in US.
   *
   * @example CO
   * @default null
   */
  principalSubdivision?: string | null;
  timeZoneOffset?: Duration;
  intervalPeriod?: IntervalPeriod;
  /**
   * A list of programDescriptions
   *
   * @default null
   */
  programDescriptions?:
    | {
        /**
         * A human or machine readable program description
         *
         * @format uri
         * @example www.myCorporation.com/myProgramDescription
         */
        URL: string;
      }[]
    | null;
  /**
   * True if events are fixed once transmitted.
   *
   * @example false
   * @default null
   */
  bindingEvents?: boolean | null;
  /**
   * True if events have been adapted from a grid event.
   *
   * @example false
   * @default null
   */
  localPrice?: boolean | null;
  /**
   * A list of payloadDescriptors.
   *
   * @default null
   */
  payloadDescriptors?:
    | (EventPayloadDescriptor | ReportPayloadDescriptor)[]
    | null;
  /**
   * A list of valuesMap objects.
   *
   * @default null
   */
  targets?: ValuesMap[] | null;
};

/**
 * report object.
 */
export type Report = {
  id?: ObjectID;
  createdDateTime?: DateTime;
  modificationDateTime?: DateTime;
  /**
   * Used as discriminator
   */
  objectType?: "REPORT";
  programID: ObjectID;
  eventID: ObjectID;
  /**
   * User generated identifier; may be VEN ID provisioned out-of-band.
   *
   * @minLength 1
   * @maxLength 128
   * @example VEN-999
   */
  clientName: string;
  /**
   * User defined string for use in debugging or User Interface.
   *
   * @example Battery_usage_04112023
   * @default null
   */
  reportName?: string | null;
  /**
   * A list of reportPayloadDescriptors.
   *
   * @default null
   */
  payloadDescriptors?: ReportPayloadDescriptor[] | null;
  /**
   * A list of objects containing report data for a set of resources.
   */
  resources: {
    /**
     * User generated identifier. A value of AGGREGATED_REPORT indicates an aggregation of more that one resource's data
     *
     * @minLength 1
     * @maxLength 128
     * @example RESOURCE-999
     */
    resourceName: string;
    intervalPeriod?: IntervalPeriod;
    /**
     * A list of interval objects.
     */
    intervals: Interval[];
  }[];
};

/**
 * Event object to communicate a Demand Response request to VEN.
 * If intervalPeriod is present, sets default start time and duration of intervals.
 */
export type Event = {
  id?: ObjectID;
  createdDateTime?: DateTime;
  modificationDateTime?: DateTime;
  /**
   * Used as discriminator
   */
  objectType?: "EVENT";
  programID: ObjectID;
  /**
   * User defined string for use in debugging or User Interface.
   *
   * @example price event 11-18-2022
   * @default null
   */
  eventName?: string | null;
  /**
   * Relative priority of event. A lower number is a higher priority.
   *
   * @minimum 0
   * @example 0
   * @default null
   */
  priority?: number | null;
  /**
   * A list of valuesMap objects.
   *
   * @default null
   */
  targets?: ValuesMap[] | null;
  /**
   * A list of reportDescriptor objects. Used to request reports from VEN.
   *
   * @default null
   */
  reportDescriptors?: ReportDescriptor[] | null;
  /**
   * A list of payloadDescriptor objects.
   *
   * @default null
   */
  payloadDescriptors?: EventPayloadDescriptor[] | null;
  intervalPeriod?: IntervalPeriod;
  /**
   * A list of interval objects.
   */
  intervals: Interval[];
};

/**
 * An object created by a client to receive notification of operations on objects.
 * Clients may subscribe to be notified when a type of object is created,
 * updated, or deleted.
 */
export type Subscription = {
  id?: ObjectID;
  createdDateTime?: DateTime;
  modificationDateTime?: DateTime;
  /**
   * Used as discriminator.
   */
  objectType?: "SUBSCRIPTION";
  /**
   * User generated identifier, may be VEN identifier provisioned out-of-band.
   *
   * @minLength 1
   * @maxLength 128
   * @example VEN-999
   */
  clientName: string;
  programID: ObjectID;
  /**
   * list of objects and operations to subscribe to.
   */
  objectOperations: {
    /**
     * list of objects to subscribe to.
     */
    objects: ObjectTypes[];
    /**
     * list of operations to subscribe to.
     */
    operations: ("GET" | "POST" | "PUT" | "DELETE")[];
    /**
     * User provided webhook URL.
     *
     * @format uri
     * @example https://myserver.com/send/callback/here
     */
    callbackUrl: string;
    /**
     * User provided token.
     * To avoid custom integrations, callback endpoints
     * should accept the provided bearer token to authenticate VTN requests.
     *
     * @example NCEJGI9E8ER9802UT9HUG
     * @default null
     */
    bearerToken?: string | null;
  }[];
  /**
   * A list of valuesMap objects. Used by server to filter callbacks.
   *
   * @default null
   */
  targets?: ValuesMap[] | null;
};

/**
 * Ven represents a client with the ven role.
 */
export type Ven = {
  id?: ObjectID;
  createdDateTime?: DateTime;
  modificationDateTime?: DateTime;
  /**
   * Used as discriminator.
   */
  objectType?: "VEN";
  /**
   * User generated identifier, may be VEN identifier provisioned out-of-band.
   * venName is expected to be unique within the scope of a VTN
   *
   * @minLength 1
   * @maxLength 128
   * @example VEN-999
   */
  venName: string;
  /**
   * A list of valuesMap objects describing attributes.
   *
   * @default null
   */
  attributes?: ValuesMap[] | null;
  /**
   * A list of valuesMap objects describing target criteria.
   *
   * @default null
   */
  targets?: ValuesMap[] | null;
  /**
   * A list of resource objects representing end-devices or systems.
   *
   * @default null
   */
  resources?: Resource[] | null;
};

/**
 * A resource is an energy device or system subject to control by a VEN.
 */
export type Resource = {
  id?: ObjectID;
  createdDateTime?: DateTime;
  modificationDateTime?: DateTime;
  /**
   * Used as discriminator.
   */
  objectType?: "RESOURCE";
  /**
   * User generated identifier, resource may be configured with identifier out-of-band.
   * resourceName is expected to be unique within the scope of the associated VEN.
   *
   * @minLength 1
   * @maxLength 128
   * @example RESOURCE-999
   */
  resourceName: string;
  venID?: ObjectID;
  /**
   * A list of valuesMap objects describing attributes.
   *
   * @default null
   */
  attributes?: ValuesMap[] | null;
  /**
   * A list of valuesMap objects describing target criteria.
   *
   * @default null
   */
  targets?: ValuesMap[] | null;
};

/**
 * An object defining a temporal window and a list of valuesMaps.
 * if intervalPeriod present may set temporal aspects of interval or override event.intervalPeriod.
 */
export type Interval = {
  /**
   * A client generated number assigned an interval object. Not a sequence number.
   *
   * @format int32
   * @example 0
   */
  id: number;
  intervalPeriod?: IntervalPeriod;
  /**
   * A list of valuesMap objects.
   */
  payloads: ValuesMap[];
};

/**
 * Defines temporal aspects of intervals.
 * A duration of default PT0S indicates instantaneous or infinity, depending on payloadType.
 * A randomizeStart of default null indicates no randomization.
 */
export type IntervalPeriod = {
  start: DateTime;
  duration?: Duration;
  randomizeStart?: Duration;
};

/**
 * Represents one or more values associated with a type.
 * E.g. a type of PRICE contains a single float value.
 */
export type ValuesMap = {
  /**
   * Enumerated or private string signifying the nature of values.
   * E.G. "PRICE" indicates value is to be interpreted as a currency.
   *
   * @minLength 1
   * @maxLength 128
   * @example PRICE
   */
  type: string;
  /**
   * A list of data points. Most often a singular value such as a price.
   *
   * @example 0.17
   */
  values: (number | number | string | boolean | Point)[];
};

/**
 * A pair of floats typically used as a point on a 2 dimensional grid.
 */
export type Point = {
  /**
   * A value on an x axis.
   *
   * @format float
   * @example 1
   */
  x: number;
  /**
   * A value on a y axis.
   *
   * @format float
   * @example 2
   */
  y: number;
};

/**
 * Contextual information used to interpret event valuesMap values.
 * E.g. a PRICE payload simply contains a price value, an
 * associated descriptor provides necessary context such as units and currency.
 */
export type EventPayloadDescriptor = {
  /**
   * Used as discriminator.
   */
  objectType?: "EVENT_PAYLOAD_DESCRIPTOR";
  /**
   * Enumerated or private string signifying the nature of values.
   *
   * @minLength 1
   * @maxLength 128
   * @example PRICE
   */
  payloadType: string;
  /**
   * Units of measure.
   *
   * @example KWH
   * @default null
   */
  units?: string | null;
  /**
   * Currency of price payload.
   *
   * @example USD
   * @default null
   */
  currency?: string | null;
};

/**
 * Contextual information used to interpret report payload values.
 * E.g. a USAGE payload simply contains a usage value, an
 * associated descriptor provides necessary context such as units and data quality.
 */
export type ReportPayloadDescriptor = {
  /**
   * Used as discriminator.
   */
  objectType?: "REPORT_PAYLOAD_DESCRIPTOR";
  /**
   * Enumerated or private string signifying the nature of values.
   *
   * @minLength 1
   * @maxLength 128
   * @example USAGE
   */
  payloadType: string;
  /**
   * Enumerated or private string signifying the type of reading.
   *
   * @example DIRECT_READ
   * @default null
   */
  readingType?: string | null;
  /**
   * Units of measure.
   *
   * @example KWH
   * @default null
   */
  units?: string | null;
  /**
   * A quantification of the accuracy of a set of payload values.
   *
   * @format float
   * @example 0
   * @default null
   */
  accuracy?: number | null;
  /**
   * A quantification of the confidence in a set of payload values.
   *
   * @format int32
   * @minimum 0
   * @maximum 100
   * @example 100
   * @default null
   */
  confidence?: number | null;
};

/**
 * An object that may be used to request a report from a VEN.
 */
export type ReportDescriptor = {
  /**
   * Enumerated or private string signifying the nature of values.
   *
   * @minLength 1
   * @maxLength 128
   * @example USAGE
   */
  payloadType: string;
  /**
   * Enumerated or private string signifying the type of reading.
   *
   * @example DIRECT_READ
   * @default null
   */
  readingType?: string | null;
  /**
   * Units of measure.
   *
   * @example KWH
   * @default null
   */
  units?: string | null;
  /**
   * A list of valuesMap objects.
   *
   * @default null
   */
  targets?: ValuesMap[] | null;
  /**
   * True if report should aggregate results from all targeted resources.
   * False if report includes results for each resource.
   *
   * @example false
   * @default false
   */
  aggregate?: boolean;
  /**
   * The interval on which to generate a report.
   * -1 indicates generate report at end of last interval.
   *
   * @format int32
   * @example -1
   * @default -1
   */
  startInterval?: number;
  /**
   * The number of intervals to include in a report.
   * -1 indicates that all intervals are to be included.
   *
   * @format int32
   * @example -1
   * @default -1
   */
  numIntervals?: number;
  /**
   * True indicates report on intervals preceding startInterval.
   * False indicates report on intervals following startInterval (e.g. forecast).
   *
   * @example true
   * @default true
   */
  historical?: boolean;
  /**
   * Number of intervals that elapse between reports.
   * -1 indicates same as numIntervals.
   *
   * @format int32
   * @example -1
   * @default -1
   */
  frequency?: number;
  /**
   * Number of times to repeat report.
   * 1 indicates generate one report.
   * -1 indicates repeat indefinitely.
   *
   * @format int32
   * @example 1
   * @default 1
   */
  repeat?: number;
};

/**
 * URL safe VTN assigned object ID.
 *
 * @pattern ^[a-zA-Z0-9_-]*$
 * @minLength 1
 * @maxLength 128
 * @example object-999
 */
export type ObjectID = string;

/**
 * VTN generated object included in request to subscription callbackUrl.
 */
export type Notification = {
  objectType: ObjectTypes;
  /**
   * the operation on on object that triggered the notification.
   *
   * @example POST
   */
  operation: "GET" | "POST" | "PUT" | "DELETE";
  /**
   * the object that is the subject of the notification.
   *
   * @example {}
   */
  object: Program | Report | Event | Subscription | Ven | Resource;
  /**
   * A list of valuesMap objects.
   *
   * @default null
   */
  targets?: ValuesMap[] | null;
};

/**
 * Types of objects addressable through API.
 *
 * @example EVENT
 */
export type ObjectTypes =
  | "PROGRAM"
  | "EVENT"
  | "REPORT"
  | "SUBSCRIPTION"
  | "VEN"
  | "RESOURCE";

/**
 * datetime in ISO 8601 format
 *
 * @format date-time
 * @example "2023-06-15T09:30:00.000Z"
 */
export type DateTime = string;

/**
 * duration in ISO 8601 format
 *
 * @pattern ^(-?)P(?=\d|T\d)(?:(\d+)Y)?(?:(\d+)M)?(?:(\d+)([DW]))?(?:T(?:(\d+)H)?(?:(\d+)M)?(?:(\d+(?:\.\d+)?)S)?)?$
 * @example PT1H
 * @default PT0S
 */
export type Duration = string;

/**
 * Body of POST request to /auth/token. Note snake case per https://www.rfc-editor.org/rfc/rfc6749
 */
export type ClientCredentialRequest = {
  /**
   * OAuth2 grant type, must be 'client_credentials'
   *
   * @example client_credentials
   */
  grant_type: "client_credentials";
  /**
   * client ID to exchange for bearer token.
   *
   * @minLength 1
   * @maxLength 4096
   * @example ven_client_99
   */
  client_id: string;
  /**
   * client secret to exchange for bearer token.
   *
   * @minLength 1
   * @maxLength 4096
   * @example ven_secret_99
   */
  client_secret: string;
  /**
   * application defined scope.
   *
   * @minLength 1
   * @maxLength 4096
   * @example read_all
   */
  scope?: string;
};

/**
 * Body response from /auth/token. Note snake case per https://www.rfc-editor.org/rfc/rfc6749
 */
export type ClientCredentialResponse = {
  /**
   * access token povided by Authorization service
   *
   * @minLength 1
   * @maxLength 4096
   * @example MTQ0NjJkZmQ5OTM2NDE1ZTZjNGZmZjI3
   */
  access_token: string;
  /**
   * token type, must be Bearer.
   *
   * @example Bearer
   */
  token_type: "Bearer";
  /**
   * expiration period in seconds.
   *
   * @example 3600
   */
  expires_in?: number;
  /**
   * refresh token povided by Authorization service
   *
   * @minLength 1
   * @maxLength 4096
   * @example IwOGYzYTlmM2YxOTQ5MGE3YmNmMDFkNTVk
   */
  refresh_token?: string;
  /**
   * application defined scope.
   *
   * @minLength 1
   * @maxLength 4096
   * @example read_all
   */
  scope?: string;
};

/**
 * error reponse on HTTP 400 from auth/token per https://www.rfc-editor.org/rfc/rfc6749
 */
export type AuthError = {
  /**
   * As described in rfc6749 | invalid_request – The request is missing a parameter so the server can’t proceed with the request. This may also be returned if the request includes an unsupported parameter or repeats a parameter. invalid_client – Client authentication failed, such as if the request contains an invalid client ID or secret. Send an HTTP 401 response in this case. invalid_grant – The authorization code (or user’s password for the password grant type) is invalid or expired. This is also the error you would return if the redirect URL given in the authorization grant does not match the URL provided in this access token request. invalid_scope – For access token requests that include a scope (password or client_credentials grants), this error indicates an invalid scope value in the request. unauthorized_client – This client is not authorized to use the requested grant type. For example, if you restrict which applications can use the Implicit grant, you would return this error for the other apps. unsupported_grant_type – If a grant type is requested that the authorization server doesn’t recognize, use this code. Note that unknown grant types also use this specific error code rather than using the invalid_request above.
   *
   * @example invalid_request
   */
  error:
    | "invalid_request"
    | "invalid_client"
    | "invalid_grant"
    | "invalid_scope"
    | "unauthorized_client"
    | "unsupported_grant_type";
  /**
   * Should be a sentence or two at most describing the circumstance of the error
   *
   * @example Request was missing the 'client_id' parameter.
   */
  error_description?: string;
  /**
   * Optional reference to more detailed error description
   *
   * @format uri
   * @example See the full API docs at https://authorization-server.com/docs/access_toke
   */
  error_uri?: string;
};

/**
 * reusable error response. From https://opensource.zalando.com/problem/schema.yaml.
 */
export type Problem = {
  /**
   * An absolute URI that identifies the problem type.
   * When dereferenced, it SHOULD provide human-readable documentation for the problem type
   * (e.g., using HTML).
   *
   * @format uri
   * @default about:blank
   * @example https://zalando.github.io/problem/constraint-violation
   */
  type?: string;
  /**
   * A short, summary of the problem type. Written in english and readable
   * for engineers (usually not suited for non technical stakeholders and
   * not localized); example: Service Unavailable.
   */
  title?: string;
  /**
   * The HTTP status code generated by the origin server for this occurrence
   * of the problem.
   *
   * @format int32
   * @minimum 100
   * @maximum 600
   * @exclusiveMaximum true
   * @example 503
   */
  status?: number;
  /**
   * A human readable explanation specific to this occurrence of the
   * problem.
   *
   * @example Connection to database timed out
   */
  detail?: string;
  /**
   * An absolute URI that identifies the specific occurrence of the problem.
   * It may or may not yield further information if dereferenced.
   *
   * @format uri
   */
  instance?: string;
};
